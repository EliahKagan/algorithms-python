name: Test

on: [push, pull_request]

jobs:
  pytest-conda:
    name: pytest (conda)

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.13t', '3.13', '3.12', '3.11', '3.10', '3.9', '3.8', '3.7']

      fail-fast: false

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Substitute Python version
        run: |
          perl -i -spwe 's/^ *- python=\K.+$/$pyver/' -- \
              -pyver=${{ matrix.python-version }} environment.yml

      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml

      - name: Run all tests
        run: pytest --doctest-modules
        timeout-minutes: 2

  pytest-pipenv-lock:
    name: pytest (Pipfile.lock)

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Upgrade PyPA packages
        run: python -m pip install -U pip setuptools wheel

      - name: Install pipenv
        run: pip install pipenv

      - name: Install project with all dependencies
        run: pipenv install -d

      - name: Run all tests
        run: pipenv run pytest --doctest-modules
        timeout-minutes: 2

  pytest-pipenv:
    name: pytest (Pipfile)

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.13t', '3.13', '3.12', '3.11', '3.10', '3.9', '3.8', '3.7']

      fail-fast: false

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Remove Pipfile.lock
        run: rm Pipfile.lock

      - name: Drop full Python version
        run: |
          perl -i -nwe 'print unless /^python_full_version = "[^"]+"$/' Pipfile

      - name: Substitute Python version
        run: |
          perl -i -spwe 's/^python_version = "\K[^"]+(?="$)/$pyver/' -- \
              -pyver=${{ matrix.python-version }} Pipfile

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade PyPA packages
        run: python -m pip install -U pip setuptools wheel

      - name: Install pipenv
        run: pip install pipenv

      - name: Install project with all dependencies
        run: pipenv install -d

      - name: Run all tests
        run: pipenv run pytest --doctest-modules
        timeout-minutes: 2

  lint:
    name: Lint (flake8)

    runs-on: ubuntu-latest

    steps:
      - name: Check out source repository
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: flake8 Lint
        uses: py-actions/flake8@v2

  shellcheck:
    name: ShellCheck

    runs-on: ubuntu-latest

    steps:
      - name: Check out source repository
        uses: actions/checkout@v4

      - name: Analyze shell scripts
        uses: bewuethr/shellcheck-action@v2
